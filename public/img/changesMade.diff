diff --git a/inc/Nv/Invoice.php b/inc/Nv/Invoice.php
index f31fc6e9f6..4dcd99d010 100644
--- a/inc/Nv/Invoice.php
+++ b/inc/Nv/Invoice.php
@@ -26,6 +26,9 @@ class Nv_Invoice
 {
 
     const ERR_UPLOAD_FAILED = 907;
+    public static $euCountriesWithoutFrance = [ 'Albania', 'Austria', 'Belgium', 'Croatia', 'Czech Republc', 'Denmark', 'Estonia',
+        'Finland', 'Germany', 'Greece', 'Hungary', 'Ireland', 'Italy', 'Latvia', 'Lithuania', 'Luxembourg', 'Netherlands',
+        'Norway', 'Poland', 'Portugal', 'Romania', 'Slovakia', 'Slovenia', 'Spain', 'Sweden', 'Switzerland', 'United Kingdom' ];
 
     public function __construct($product, $transaction)
     {
@@ -46,7 +49,14 @@ class Nv_Invoice
         $pdf = Nv_Pdf::load($file);
         $page = $pdf->pages[0];
         $sign = ($refund) ? '-': '';
-
+        if (!in_array($this->product->getDisplayCountry(), self::$euCountriesWithoutFrance)) {
+            $vatLabel = $this->product->getVATLabel();
+            $vat = $this->product->getDisplayVAT();
+        } else {
+            $vatLabel = empty($this->product->vat) ? $this->product->getVATLabel() : 'VAT Not applicable';
+            $vat = empty($this->product->vat) ? $this->product->getDisplayVAT() : Product::formatPrice('0.00', $this->product->getCurrencyCode());
+        }
+        $totalPrice = $vatLabel === 'VAT Not applicable' ? $this->product->getDisplayPriceWithoutVAT() : $this->product->getDisplayInvoicePrice(true);
         //Wording
         $wording = array(
             'from'                => 'From:',
@@ -65,12 +75,13 @@ class Nv_Invoice
             'servicedetail'       => 'Subscription to Netvibes ' . $type,
             'userid'              => 'userId: ' . $this->product->userId,
             'totalht'             => 'TOTAL',
-            'vat'                 => $this->product->getVATLabel(),
+            'vat'                 => $vatLabel,
             'totalttc'            => 'TOTAL',
             'price'               => $sign . $this->product->getDisplayPriceWithoutVAT(),
-            'vatPrice'            => $sign . $this->product->getDisplayVAT(),
-            'totalPrice'          => $sign . $this->product->getDisplayInvoicePrice(true),
+            'vatPrice'            => $sign . $vat,
+            'totalPrice'          => $sign . $totalPrice,
             'nvinfosfooter'       => 'NETVIBES SAS - 10 Place de la madeleine 75008 Paris - France - TVA FR 06 491808 234 - RCS 491808234',
+            'Impots'              => 'Autoliquidation art 283-2 du CGI',
             'billinfo'            => 'All designated amounts in this invoice are expressed in ' . $this->product->getCurrencyCode() . '.'
         );
 
@@ -176,7 +187,8 @@ class Nv_Invoice
             ->drawText($wording['totalPrice'], 498, 350, 'UTF-8');
 
         $page->setStyle($helv9);
-        $pdf->drawTextAlignRight($page, $wording['billinfo'], 553, 300, 'UTF-8');
+        $pdf->drawTextAlignRight($page, $wording['Impots'], 553, 315, 'UTF-8');
+        $pdf->drawTextAlignRight($page, $wording['billinfo'], 545, 300, 'UTF-8');
 
         // Footer
         $page->setStyle($helv9);
diff --git a/inc/data/Models/Product.php b/inc/data/Models/Product.php
index 90d43cbf38..78eef0cb0f 100644
--- a/inc/data/Models/Product.php
+++ b/inc/data/Models/Product.php
@@ -156,7 +156,7 @@ abstract class Product extends Nv_Db_Table_Row
     public function getDisplayCountry()
     {
         $countries = array();
-        $countriesUp =Nv_Globalization::getCountryList();
+        $countriesUp = Nv_Globalization::getCountryList();
         foreach ($countriesUp as $key => $value) {
             $countries[strtolower($key)] = $value;
         }
@@ -595,7 +595,12 @@ abstract class Product extends Nv_Db_Table_Row
      */
     public function getTransactionPrice()
     {
-        return $this->getInvoicePrice() * 100;
+        $price = $this->getInvoicePrice() * 100;
+        $data = $this->_getPrice();
+        if (in_array($this->getDisplayCountry(), Nv_Invoice::$euCountriesWithoutFrance)) {
+            $price = empty($this->vat) ? $price : intval($price / (1 + $data['vat']));
+        }
+        return $price;
     }
 
     public function getCurrencyCode()
diff --git a/public/js/App/Welcome/Payment.js b/public/js/App/Welcome/Payment.js
index befbd785c7..dbc7007343 100644
--- a/public/js/App/Welcome/Payment.js
+++ b/public/js/App/Welcome/Payment.js
@@ -32,6 +32,9 @@ define('App/Welcome/Payment', [
         paymentEls: {},
         formFields: {},
         product:'',
+        euCountriesWithoutFrance: [ _('Albania'), _('Austria'), _('Belgium'), _('Croatia'), _('Czech Republic'), _('Denmark'), _('Estonia'), _('Finland'), _('Germany'),
+        _('Greece'), _('Hungary'), _('Ireland'), _('Italy'), _('Latvia'), _('Lithuania'), _('Luxembourg'), _('Netherlands'), _('Norway'),
+        _('Poland'), _('Portugal'), _('Romania'), _('Slovakia'), _('Slovenia'), _('Spain'), _('Sweden'), _('Switzerland'), _('United Kingdom') ],
 
         init: function (countries, userInfos, product) {
             if (Context.isIOSApp()) {
@@ -138,6 +141,7 @@ define('App/Welcome/Payment', [
 
         buildInput: function (userInfos, name, label, required) {
             var value = this.getPrefill(userInfos, name);
+            var classToAdd = name === 'vat' ? 'vat' : '';
             var isValue = value && value !== '0' && value !== '';
             var attr = {
                 value: isValue ? value : '',
@@ -148,7 +152,7 @@ define('App/Welcome/Payment', [
                 attr.required = '';
             }
 
-            var field = cE('fieldset', { "class": required ? "required" : "" }).addContent(
+            var field = cE('fieldset', { "class": required ? "required" : '' + classToAdd }).addContent(
                 this.formFields[name] = new Input.Text({
                     className: "large",
                     attributes: attr
@@ -256,12 +260,25 @@ define('App/Welcome/Payment', [
             }
         },
 
+        hideVatField: function (countryCode) {
+            var countries = window.productPaymentAllCountries;
+            var elm = this.paymentEls.container.getElement('.vat');
+
+            if (this.euCountriesWithoutFrance.indexOf(countries[countryCode]) === -1) {
+                elm.setStyle('display', 'none');
+                elm.getElement('input').value = '';
+            } else {
+                elm.setStyle('display', 'block');
+            }
+        },
+
         onCountrySelected: function (product) {
             var countryCode = this.formFields.country.getValue();
             ApiRoutes.getProductRegion({ 'countryCode': countryCode }, function (error, data) {
                 if (!error) {
                     this.buildPaymentCards(data.region);
                     this.changePrice(product, data);
+                    this.hideVatField(countryCode);
                 }
             }.bind(this));
         },
@@ -271,7 +288,7 @@ define('App/Welcome/Payment', [
 
             this.checkFormError();
 
-            if (!document.body.getElement('.uwa-input.error') && this.formFields.terms.isChecked()) {
+            if (!document.body.getElement('.nv-product-error') && this.formFields.terms.isChecked()) {
 
                 var serializedData = AppUtils.getInputsValue(this.paymentEls.container);
 
@@ -306,7 +323,7 @@ define('App/Welcome/Payment', [
 
             this.checkFormError();
 
-            if (!document.body.getElement('.uwa-input.error') && this.formFields.terms.isChecked()) {
+            if (!document.body.getElement('.nv-product-error') && this.formFields.terms.isChecked()) {
 
                 var serializedData = AppUtils.getInputsValue(this.paymentEls.container);
                 ApiRoutes.productUpdate(serializedData, function (error) {
@@ -334,7 +351,7 @@ define('App/Welcome/Payment', [
         checkFormError: function () {
             // check client if there is error
             for (var key in this.formFields) {
-                var isNotValidInput = this.formFields[key].getContent().hasClassName("required") &&
+                var isNotValidInput = this.formFields[key].getInputElement().getParent('fieldset').hasClassName("required") &&
                     this.formFields[key].getContent().value === '';
 
                 var isNotValidCheckbox = this.formFields[key] instanceof Input.Checkbox &&
diff --git a/scripts/npd/transaction_report.php b/scripts/npd/transaction_report.php
index bab3a58469..02a3cb8061 100644
--- a/scripts/npd/transaction_report.php
+++ b/scripts/npd/transaction_report.php
@@ -66,8 +66,12 @@ class Script_Npd_TransactionReport extends Nv_Console_Abstract
             ];
 
             if ($type == 'VIP' && $transaction->currencyCode == 'EUR') {
+                $trCode = $transaction->amount == '2000' ? '445300' : '445711';
                 $vipEur[] = ['VT', $startPeriod, $startPeriod, 'G', $transaction->orderId, '411100', 'VIPEUR', $subscribe, 'D', $sign . '24,00', '', ''];
-                $vipEur[] = ['VT', $startPeriod, '' , 'G', $transaction->orderId, '445711', '', $subscribe , 'C', $sign . '4,00', '' , ''];
+                $vipEur[] = ['VT', $startPeriod, '' , 'G', $transaction->orderId, $trCode, '', $subscribe , 'C', $sign . '4,00', '' , ''];
+                if ($trCode == '445300') {
+                    $vipEur[] = ['VT', $startPeriod, '' , 'G', $transaction->orderId, '445663', '', $subscribe , 'D', $sign . '4,00', '' , ''];
+                }
                 $vipEur[] = ['VT', $startPeriod, '' , 'G', $transaction->orderId, '706230', '', $subscribe, 'C', $sign . '20,00', '' , ''];
                 $vipEur[] = ['VT', $startPeriod, '' , 'A', $transaction->orderId, '706230', '', $subscribe, 'C', $sign . '20,00', 'WIDGE' , ''];
                 $vipEur[] = ['VT', $startPeriod, '' , 'A', $transaction->orderId, '706230', '', $subscribe, 'C', $sign . '20,00', '', 'FI110012' , ''];
@@ -79,8 +83,12 @@ class Script_Npd_TransactionReport extends Nv_Console_Abstract
                 $vipUs[] = ['VT', $startPeriod, '' , 'A', $transaction->orderId, '706230', '', $subscribe, 'C', $sign . '24,00', '', 'FI110012' , ''];
 
             } else if ($type == 'NPD' && $transaction->currencyCode == 'EUR') {
+                $trCode = $transaction->amount == '41583' ? '445300' : '445711';
                 $npdEur[] = ['VT', $startPeriod, $startPeriod, 'G', $transaction->orderId, '411100', 'NPDEUR', $subscribe, 'D', $sign . '499,00', '', ''];
-                $npdEur[] = ['VT', $startPeriod, '' , 'G', $transaction->orderId, '445711', '', $subscribe , 'C', $sign . '83,17', '' , ''];
+                $npdEur[] = ['VT', $startPeriod, '' , 'G', $transaction->orderId, $trCode, '', $subscribe , 'C', $sign . '83,17', '' , ''];
+                if ($trCode == '445300') {
+                    $npdEur[] = ['VT', $startPeriod, '' , 'G', $transaction->orderId, '445663', '', $subscribe , 'D', $sign . '83,17', '' , ''];
+                }
                 $npdEur[] = ['VT', $startPeriod, '' , 'G', $transaction->orderId, '706230', '', $subscribe, 'C', $sign . '415,83', '' , ''];
                 $npdEur[] = ['VT', $startPeriod, '' , 'A', $transaction->orderId, '706230', '', $subscribe, 'C', $sign . '415,83', 'WIDGE' , ''];
                 $npdEur[] = ['VT', $startPeriod, '' , 'A', $transaction->orderId, '706230', '', $subscribe, 'C', $sign . '415,83', '', 'FI110012' , ''];
@@ -100,8 +108,6 @@ class Script_Npd_TransactionReport extends Nv_Console_Abstract
 
             $this->_mail->setSubject('[Report - ' . Nv_Registry::get('config')->domains->main . '] ' . $data['content']);
 
-            ;
-
             foreach ($emails as $email) {
                 $this->_mail->addTo($email);
             }
